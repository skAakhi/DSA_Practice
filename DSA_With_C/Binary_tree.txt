// Online C compiler to run C program online
#include <stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *left,*right;
    
};

struct node* create()
{
    int x;
    struct node* newnode;
    
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter data that you want to insert or -1 if there is no node");
    scanf("%d",&x);
    if(x==-1)
    {
        return 0;
    }
    else{
        newnode->data=x;
        printf("Enter left child of %d\n",x);
        newnode->left=create();
        printf("Enter right child of %d\n",x);
        newnode->right=create();
        
        return newnode;
    }
}


int main() {
    struct node* root;
    
    root=create();


    return 0;
}
























----------------------------------------------------------------------------------------------------------------------
// Online C compiler to run C program online
#include <stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *left,*right;
    
};

struct node* create()
{
    int x;
    struct node* newnode;
    
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter data that you want to insert or -1 if there is no node\t");
    scanf("%d",&x);
    if(x==-1)
    {
        return 0;
    }
    else{
        newnode->data=x;
        printf("Enter left child of %d\n",x);
        newnode->left=create();
        printf("Enter right child of %d\n",x);
        newnode->right=create();
        
        return newnode;
    }
}

void inorder(struct node* root)
{
    if(root==NULL)
    {
        return ;
    }
    else{
        inorder(root->left);
        printf("%d\t\n",root->data);
        inorder(root->right);
    }
}

void preorder(struct node* root)
{
    if(root==NULL)
    {
        return ;
    }
    else{
        printf("%d\t\n",root->data);
        preorder(root->left);
        preorder(root->right);
        }
}

void postorder(struct node* root)
{
    if(root==NULL)
    {
        return;
    }
    else
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d\t\n",root->data);
    }
}


int main() {
    struct node* root;
    
    root=create();
    printf("BT inorder traversal\n");
    inorder(root);
    printf("BT preorder traversal\n");
    preorder(root);
    printf("BT postorder traversal\n");
    postorder(root);


    return 0;
}