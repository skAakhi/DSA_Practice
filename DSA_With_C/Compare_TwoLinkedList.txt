Comparing to linked lists :

Your are given the pointer to the head nodes of two linked lists. compare data in the nodes of the  linked lists to check if they are equal only if they have  the same number of nodes and corresponding nodes contains the same data . eighter head pointer given may be null meaning that the corresponding lists is empty


Input Formate :

You have to complete the int compareList(Node* headA , Node* headB) method which takes two arguments - the heads of the two linked lists to compare . you should NOT read any input from stdin/console.



OutPut Formate :

Compare the two linked lists and return 1   if the lists are equal . otherwise  return 0 . Dont print anything at the output console/stdout


Sample Input  :                    Sample Output : 
NULL, 1--->NULL                        0

1--->2--->NULL ,1--->2--->NULL         1































#include<stdlib.h>
#include<stdio.h>

struct node{
    int data;
    struct node *next;
};
struct node* head1;
struct node *tail1;
struct node* head2;
struct node *tail2;

void create1()
{
    int x;
    struct node *newnode,*temp;//*head1=NULL;
   scanf("%d",&x); 
while(x!=-1)
{
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=x;
    if(head1==NULL)
    {
        head1=tail1=newnode;
    }
    else
    {
        tail1->next=newnode;
        tail1=newnode;
    }
    scanf("%d",&x);
    
} 
   // return head;
}


void create2()
{
    int x;
    struct node *newnode,*temp;//*head2=NULL;
   scanf("%d",&x); 
while(x!=-1)
{
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=x;
    if(head2==NULL)
    {
        head2=tail2=newnode;
    }
    else
    {
        tail2->next=newnode;
        tail2=newnode;
    }
    scanf("%d",&x);
    
} 
   // return head2;
}

void Display1()
{
    struct node *temp=head1;
    while(temp!=NULL)
    {
        printf("%d\t",temp->data);
        temp=temp->next;
    }
    printf("\n");
    
}


void Display2()
{
    struct node *temp=head2;
    while(temp!=NULL)
    {
        printf("%d\t",temp->data);
        temp=temp->next;
    }
    printf("\n");
    
}

int compareList()
{
while(head1!=NULL && head2!=NULL)
{
if(head1->data == head2->data)
{
head1=head1->next;
head2=head2->next;
}
else{
    printf("Not equal\n");
    return 0;
}
//return 0;
}


if(head1==NULL && head2==NULL)
{
printf("Both the lists are equal\n");
return 1;
}
else
{
printf("Not equal\n");
return 0;
}

}


int main()
{ 
    int result;
create1();
create2();
Display1();
Display2();
result=compareList();
printf("%d",result);
}





















